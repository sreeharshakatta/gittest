/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import carfleetmanager.carDetails;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import java.util.Random;
import java.util.stream.Collectors;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author katta
 */
public class CreateCarJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateCarJPanel
     */
    public CreateCarJPanel() {
        initComponents();
        ButtonGroup btnGrp = new ButtonGroup();
        btnGrp.add(rdbAvlblYes);
        btnGrp.add(rdbAvlblNo);
        txtManufacturer.setName("Manufacturer");
        txtSerialNumber.setName("SerialNumber");
        txtModelNumber.setName("ModelNumber");
        txtMinimumSeats.setName("MinimumSeats");
        txtMaximumSeats.setName("MaximumSeats");
        txtYearOfManf.setName("YearOfManf");
        txtMcExpiryDate.setName("McExpiryDate");
        txtCity.setName("City");
    }

    /*validateData() - Takes a JComponent as input - Perform validation if data received is valid*/
    public boolean validateData(JComponent input) {
        String name = input.getName();
        String errorMsg = "";
        boolean raiseError = false;
        String text = ((JTextField) input).getText().trim();
        if (text == null || text.isEmpty()) {
            raiseError = true;
            errorMsg = String.format("Please enter a value. The value for %s cannot be empty", name);

        } else {
            switch (name) {
                case "Manufacturer":
                case "SerialNumber":
                case "ModelNumber":
                case "City":
                    if (!text.matches("^[a-zA-Z0-9]+$")) {
                        raiseError = true;
                        errorMsg = String.format("Please enter a valid %s", name);
                    }
                    break;
                case "McExpiryDate":
                    if (!text.matches("^((0[0-9]||1[0-2])-[0-2][0-9]||3[0-1])-([0-9][0-9])?[0-9][0-9]$")) {
                        raiseError = true;
                        errorMsg = String.format("Please enter a valid %s with the format MM-DD-YYYY", name);
                    }
                    break;
                case "MinimumSeats":
                case "MaximumSeats":
                    if (!text.matches("^[0-9]+")) {
                        raiseError = true;
                        errorMsg = String.format("Please enter a valid %s", name);
                    }
                    break;
                case "YearOfManf":
                    if (!text.matches("^[0-9]{4}")) {
                        raiseError = true;
                        errorMsg = String.format("Please enter a valid %s of 4 digits", name);
                    }
                    break;
                default:
                    break;
            }
        }
        if (raiseError) {
            JOptionPane.showMessageDialog(this, errorMsg);
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeading = new javax.swing.JLabel();
        lblManufacturer = new javax.swing.JLabel();
        txtManufacturer = new javax.swing.JTextField();
        lblModelNumber = new javax.swing.JLabel();
        lblSerialNumber = new javax.swing.JLabel();
        lblMinimumSeats = new javax.swing.JLabel();
        lblMaximumSeats = new javax.swing.JLabel();
        lblYearofManf = new javax.swing.JLabel();
        lblMcExpiryDate = new javax.swing.JLabel();
        lblAvlbl = new javax.swing.JLabel();
        txtModelNumber = new javax.swing.JTextField();
        txtSerialNumber = new javax.swing.JTextField();
        txtMinimumSeats = new javax.swing.JTextField();
        txtMaximumSeats = new javax.swing.JTextField();
        txtMcExpiryDate = new javax.swing.JTextField();
        txtYearOfManf = new javax.swing.JTextField();
        btnSaveCar = new javax.swing.JButton();
        rdbAvlblYes = new javax.swing.JRadioButton();
        rdbAvlblNo = new javax.swing.JRadioButton();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();

        lblHeading.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHeading.setText("Create Car");

        lblManufacturer.setText("Manufacturer");

        txtManufacturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManufacturerActionPerformed(evt);
            }
        });

        lblModelNumber.setText("Model Number");

        lblSerialNumber.setText("Serial Number");

        lblMinimumSeats.setText("Minimum Seats");

        lblMaximumSeats.setText("Maximum Seats");

        lblYearofManf.setText("Year of Manufacture");

        lblMcExpiryDate.setText("MC Expiry Date");

        lblAvlbl.setText("Available");

        txtModelNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelNumberActionPerformed(evt);
            }
        });

        btnSaveCar.setText("Save");
        btnSaveCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCarActionPerformed(evt);
            }
        });

        rdbAvlblYes.setText("Yes");
        rdbAvlblYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbAvlblYesActionPerformed(evt);
            }
        });

        rdbAvlblNo.setText("No");

        lblCity.setText("City");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(374, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAvlbl)
                            .addComponent(lblManufacturer)
                            .addComponent(lblModelNumber)
                            .addComponent(lblSerialNumber)
                            .addComponent(lblMinimumSeats)
                            .addComponent(lblMaximumSeats)
                            .addComponent(lblYearofManf)
                            .addComponent(lblMcExpiryDate)
                            .addComponent(lblCity))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMcExpiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaximumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMinimumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtYearOfManf, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdbAvlblYes)
                                .addGap(18, 18, 18)
                                .addComponent(rdbAvlblNo))
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(165, 165, 165))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblHeading)
                        .addGap(222, 222, 222))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSaveCar)
                        .addGap(239, 239, 239))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblHeading)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManufacturer)
                    .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblModelNumber)
                    .addComponent(txtModelNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSerialNumber)
                    .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMinimumSeats)
                    .addComponent(txtMinimumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaximumSeats)
                    .addComponent(txtMaximumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblYearofManf)
                    .addComponent(txtYearOfManf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMcExpiryDate)
                    .addComponent(txtMcExpiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvlbl)
                    .addComponent(rdbAvlblYes)
                    .addComponent(rdbAvlblNo))
                .addGap(18, 18, 18)
                .addComponent(btnSaveCar)
                .addContainerGap(143, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rdbAvlblYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbAvlblYesActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_rdbAvlblYesActionPerformed

    private void btnSaveCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCarActionPerformed
        // TODO add your handling code here:
        Gson gson = new Gson();
        BufferedReader bufferedReader;
        Random rand = new Random();
        try {
            bufferedReader = new BufferedReader(new FileReader("C:\\Users\\katta\\OneDrive\\Documents\\NetBeansProjects\\Assignment2\\src\\config\\carData.json"));
            List<carDetails> cars = new Gson().fromJson(bufferedReader, new TypeToken<List<carDetails>>() {
            }.getType());
            carDetails carDetail = new carDetails();
            if ((rdbAvlblYes.isSelected())) {
                carDetail.setAvailable("true");
            } else if ((rdbAvlblYes.isSelected())) {
                carDetail.setAvailable("false");
            } else {;
            }
            List<String> serialNumList = cars.stream().map(carDetails::getSerialNumber).collect(Collectors.toList());
            JTextField[] VARIABLE_CONSTANTS = {txtManufacturer,txtModelNumber,txtSerialNumber,txtMinimumSeats,txtMaximumSeats,txtYearOfManf,txtMcExpiryDate,txtCity};
            boolean validated = false;
            for (JTextField field : VARIABLE_CONSTANTS) {
                if (!validateData(field)) {
                    validated = false;
                    break;
                } else {
                    validated = true;
                    System.out.println("Validated");
                }
            }
            if (serialNumList.contains(txtSerialNumber.getText())){
            JOptionPane.showMessageDialog(this, "Serial Number already exists, enter a different number");
            validated = false;
            }
            if (validated) {
                Writer writer = new FileWriter("C:\\Users\\katta\\OneDrive\\Documents\\NetBeansProjects\\Assignment2\\src\\config\\carData.json");
                carDetail.setManufacturer(txtManufacturer.getText());
                carDetail.setCity(txtCity.getText());
                carDetail.setManfYear(Integer.parseInt(txtYearOfManf.getText()));
                carDetail.setMinSeats(Integer.parseInt(txtMinimumSeats.getText()));
                carDetail.setMaxSeats(Integer.parseInt(txtMaximumSeats.getText()));
                carDetail.setManufacturer(txtManufacturer.getText());
                carDetail.setModelNumber(txtModelNumber.getText());
                carDetail.setSerialNumber(txtSerialNumber.getText());
                carDetail.setMcExpiryDate(txtMcExpiryDate.getText());
                cars.add(carDetail);
                gson.toJson(cars, writer);
                writer.flush();
                writer.close();
                JOptionPane.showMessageDialog(this, "Added the Car details successfully");
            }
            }catch (FileNotFoundException ex) {
            Logger.getLogger(CreateCarJPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error while adding car details");
        }catch (IOException ex) {
            Logger.getLogger(CreateCarJPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error while adding car details");
        }

    }//GEN-LAST:event_btnSaveCarActionPerformed

    private void txtManufacturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManufacturerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManufacturerActionPerformed

    private void txtModelNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelNumberActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSaveCar;
    private javax.swing.JLabel lblAvlbl;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblManufacturer;
    private javax.swing.JLabel lblMaximumSeats;
    private javax.swing.JLabel lblMcExpiryDate;
    private javax.swing.JLabel lblMinimumSeats;
    private javax.swing.JLabel lblModelNumber;
    private javax.swing.JLabel lblSerialNumber;
    private javax.swing.JLabel lblYearofManf;
    private javax.swing.JRadioButton rdbAvlblNo;
    private javax.swing.JRadioButton rdbAvlblYes;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtMaximumSeats;
    private javax.swing.JTextField txtMcExpiryDate;
    private javax.swing.JTextField txtMinimumSeats;
    private javax.swing.JTextField txtModelNumber;
    private javax.swing.JTextField txtSerialNumber;
    private javax.swing.JTextField txtYearOfManf;
    // End of variables declaration//GEN-END:variables
}
